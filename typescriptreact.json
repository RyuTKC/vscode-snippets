{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  "Index" :{
    "description": "index format",
    "prefix": "re:index",
    "body": [
      "import React from 'react';",
      "import ReactDOM from 'react-dom';",
      "// import { BrowserRouter as Router, Link } from 'react-router-dom' /* v5 */",
      "// import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom' /* v6 */",
      "// import store, { history } from './reducks/store';",
      "// import toolkitStore, { history as toolkitHistory } from './reducks_toolkit/store';",
      "import { Provider } from 'react-redux';",
      "import { ConnectedRouter } from 'connected-react-router';",
      "// import Routing from './components/_RoutingV5';",

      "const target = document.getElementById('app');",

      "ReactDOM.render(",
      "  <React.StrictMode>",
      "    <Provider store={toolkitStore}>",
      "      <ConnectedRouter history={toolkitHistory}>",
      "        {/* <Provider store={store}>",
      "      <ConnectedRouter history={history}> */}",
      "        <Routing />",
      "      </ConnectedRouter>",
      "    </Provider>",
      "  </React.StrictMode>,",
      "  target",
      ");"
    ]
  },
  "Components": {
    "description": "component",
    "prefix": "re:compo",
    "body": [
      "import React, { useEffect, useState, useContext, useReducer, useRef, useMemo } from 'react'",
      "",
      "const ${1:components} = () =>  {",
      "  return (",
      "    <>",
      "      <div>$1</div>",
      "    </>",
      "  )",
      "}",
      "",
      "export default $1"
    ],
  },
  "Components Arg": {
    "description": "component with arg ",
    "prefix": "re:comarg",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {",
      "  ${2:arg}: string",
      "}",
      "",
      "const ${1:components} = ({${2:arg}}: Props) =>  {",
      "  return (",
      "    <>",
      "      <div>$1</div>",
      "    </>",
      "  )",
      "}",
      "",
      "export default $1"
    ],
  },
  "Props": {
    "description": "props",
    "prefix": "re:props",
    "body": [
      "type Props = {",
      "  ${1:arg}: {2|string,number,boolean|}",
      "}",
    ],
  },
  "Routing v5": {
    "description": "router v5",
    "prefix": "re:routerv5",
    "body": [
      "import 'core-js/stable';",
      "import React from 'react';",
      "import ${1/(^.)/${1:/downcase}/} from './pages/$1/${1:Page1}';",
      "import ${2/(^.)/${1:/downcase}/} from './pages/$2/${2:page2}';",
      "/****** routing version 5 ******/",
      "import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'",
      "",
      "const RouteList = {",
      "  ${1/(^.)/${1:/downcase}/}: '/${1/(^.)/${1:/downcase}/}',",
      "  ${2/(^.)/${1:/downcase}/}: '/${2/(^.)/${1:/downcase}/}',",
      "}",
      "",
      "export default () => {",
      "  return (",
      "    <Switch>",
      "      <Route exact path={RouteList.${1/(^.)/${1:/downcase}/}} component={${1/(^.)/${1:/downcase}/}} />",
      "      <Route exact path={RouteList.${2/(^.)/${1:/downcase}/}} component={${2/(^.)/${1:/downcase}/}} />",
      "    </Switch>",
      "  );",
      "}",
    ]
  }
}